name: Lambda VM

defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
    inputs:
      instance-type-name:
        description: "The instance type."
        required: true
        type: choice
        options:
          - gpu_1x_a10
          - gpu_1x_a100
          - gpu_1x_a100_sxm4
          - gpu_1x_a6000
          - gpu_1x_h100_pcie
          - gpu_1x_rtx6000
          - gpu_2x_a100
          - gpu_2x_a6000
          - gpu_4x_a100
          - gpu_4x_a6000
          - gpu_8x_a100
          - gpu_8x_a100_80gb_sxm4
          - gpu_8x_v100

jobs:
  ensure-lambda-vm-is-running:
    name: Ensure Lambda VM is running
    runs-on: ubuntu-latest
    concurrency: ensure-lambda-vm-is-running-${{ inputs.instance-type-name }}
    steps:
      # Note: When using the empty list as an output, GitHub stores this as the empty string.
      - name: Checkouts
        uses: actions/checkout@v3

      - name: Run python script
        run: |
          IP=$(
            python3 ./.github/scripts/lambda_vm.py \
              --key "${{ secrets.LAMBDA_CLOUD_RUNNER_API_KEY }}" \
              --instance-type-name "${{ inputs.instance-type-name }}"
          )
          echo "ip=$IP" | tee -a "$GITHUB_OUTPUTS"

      - name: Set up the GitHub runner SSH keys
        run: |
          mkdir -p "$HOME/.ssh"
          chmod 700 "$HOME/.ssh"
          echo "${{ secrets.RUNNER_SSH_PRIVATE_KEY }}" > "$HOME/.ssh/ed25519"
          chmod 600 "$HOME/.ssh/ed25519"
          echo "${{ secrets.RUNNER_SSH_PUBLIC_KEY }}" > "$HOME/.ssh/ed25519.pub"
          chmod 600 "$HOME/.ssh/ed25519.pub"
          cat >> "$HOME/.ssh/config" <<EOF
          Host vm
            HostName ${{ inputs.instance-type-name }}
            User ubuntu
            IdentityFile $HOME/.ssh/ed25519
            StrictHostKeyChecking no
          EOF
          chmod 600 "$HOME/.ssh/config"

      # TODO: Make it a self-hosted runner for GitHub actions to re-use some of the workflows we
      # have here.
