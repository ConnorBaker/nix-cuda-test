name: Setup
description: "Setup the GitHub Actions environment with nix."

inputs:
  cant-cache-me-nix-secret-signing-key:
    description: "The cantcache.me Nix secret signing key."
    required: true
  cloudflare-r2-access-key-id:
    description: "The Cloudflare R2 access key ID."
    required: true
  cloudflare-r2-secret-access-key:
    description: "The Cloudflare R2 secret access key."
    required: true

runs:
  using: composite
  steps:
    - name: Get the home directory
      id: get-home
      shell: bash
      run: echo "home=$HOME" | tee -a "$GITHUB_OUTPUT"

    - name: Check if the aws credentials file exists
      id: check-credentials-file
      shell: bash
      run: |
        [[ -f "${{ steps.get-home.outputs.home }}/.aws/credentials" ]] \
          && echo "exists=true" \
          || echo "exists=false" \
          | tee -a "$GITHUB_OUTPUT"

    - name: Update aws credentials file
      if: ${{ steps.check-credentials-file.outputs.exists != 'true' }}
      shell: bash
      run: |
        mkdir -p "${{ steps.get-home.outputs.home }}/.aws"
        cat >> "${{ steps.get-home.outputs.home }}/.aws/credentials" <<EOF
        [cant-cache-me]
        aws_access_key_id = ${{ inputs.cloudflare-r2-access-key-id }}
        aws_secret_access_key = ${{ inputs.cloudflare-r2-secret-access-key }}
        EOF

    - name: Check if the aws config file exists
      id: check-config-file
      shell: bash
      run: |
        [[ -f "${{ steps.get-home.outputs.home }}/.aws/config" ]] \
          && echo "exists=true" \
          || echo "exists=false" \
          | tee -a "$GITHUB_OUTPUT"

    - name: Update aws config file
      if: ${{ steps.check-config-file.outputs.exists != 'true' }}
      shell: bash
      run: |
        mkdir -p "${{ steps.get-home.outputs.home }}/.aws"
        cat >> "${{ steps.get-home.outputs.home }}/.aws/config" <<EOF
        [cant-cache-me]
        region = us-east-1
        EOF

    - name: Check if the nix secret signing key file exists
      id: check-secret-signing-key-file
      shell: bash
      run: |
        [[ -f "${{ steps.get-home.outputs.home }}/.config/nix/secret-signing-key.key" ]] \
          && echo "exists=true" \
          || echo "exists=false" \
          | tee -a "$GITHUB_OUTPUT"

    - name: Create nix secret signing key file
      if: ${{ steps.check-secret-signing-key-file.outputs.exists != 'true' }}
      shell: bash
      run: |
        mkdir -p "${{ steps.get-home.outputs.home }}/.config/nix"
        cat >> "${{ steps.get-home.outputs.home }}/.config/nix/secret-signing-key.key" <<EOF
        ${{ inputs.cant-cache-me-nix-secret-signing-key }}
        EOF

    - name: Install Nix
      if: ${{ steps.check-secret-signing-key-file.outputs.exists != 'true' }}
      uses: cachix/install-nix-action@v21
      with:
        install_url: https://releases.nixos.org/nix/nix-2.16.0/install
        extra_nix_config: |
          accept-flake-config = true
          allow-import-from-derivation = false
          cores = 0
          experimental-features = flakes nix-command no-url-literals
          extra-substituters = https://cantcache.me https://cuda-maintainers.cachix.org
          extra-trusted-public-keys = cantcache.me:Y+FHAKfx7S0pBkBMKpNMQtGKpILAfhmqUSnr5oNwNMs= cuda-maintainers.cachix.org-1:0dq3bujKpuEPMCX6U4WylrUDZ9JyUG0VpVZa7CNfq5E=
          fsync-metadata = false # for performance
          http-connections = 0
          keep-derivations = true
          keep-outputs = true
          max-jobs = auto
          max-substitution-jobs = 1024
          narinfo-cache-negative-ttl = 0
          secret-key-files = ${{ steps.get-home.outputs.home }}/.config/nix/secret-signing-key.key
          system-features = nixos-test benchmark big-parallel kvm
          trusted-users = ["root" "@nixbld" "@wheel" "connorbaker" "runner"];
